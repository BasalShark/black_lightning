<div id="canvas" style="width: 940px; height: 2000px;"></div>
<script>
var g = new Graph();

var render = function(r, n) {
        /* the Raphael set is obligatory, containing all you want to display */
        var set = r.set().push(
            /* custom objects go here */
            r.rect(n.point[0]-30, n.point[1]-13, 60, 44).attr({"fill": "#feb", r : "12px", "stroke-width" : n.distance == 0 ? "3px" : "1px" })).push(
            r.text(n.point[0], n.point[1] + 10, (n.label || n.id)));
        return set;
    };

/* add a simple node */
<% @techies.each do |tech| %>
g.addNode("<%= tech.name %>", {render:render});
<% end %>

<% @techies.each do |tech| %>
    <% tech.children.each do |child| %>
    g.addEdge("<%= tech.name %>", "<%= child.name %>", {directed: true});
    <% end %>
<% end %>

/* layout the graph using the Spring layout implementation */
var layouter = new Graph.Layout.Spring(g);
layouter.layout();

/* draw the graph using the RaphaelJS draw implementation */
var renderer = new Graph.Renderer.Raphael('canvas', g, 940, 1500);
renderer.draw();
</script>