<% url = '/' + controller_path if url.nil? %>
<div class="card">
  <div class="card-header">
    <h3 class="card-title">Search</h3>
  </div>

  <%= search_form_for @q, builder: SimpleForm::FormBuilder, url: url, html: { id: "search" },   wrapper: :horizontal_form,
  wrapper_mappings: {
    boolean:       :horizontal_boolean,
    check_boxes:   :horizontal_collection,
    date:          :horizontal_multi_select,
    datetime:      :horizontal_multi_select,
    file:          :horizontal_file,
    radio_buttons: :horizontal_collection,
    range:         :horizontal_range,
    time:          :horizontal_multi_select,
    select:        :horizontal_select
  } do |f| %>
  <div class="card-body">
  
    <% input_fields.each do |key, params| %>
    <% if params.key?(:label) %>
    <% label = params[:label] %>
    <% elsif params.key?(:slug) %>
    <% label = t("simple_form.labels.#{params[:slug]}") %>
    <% else %>
    <% label = key.to_s.humanize %>
    <% end %>

    <% params[:label] = label %>

    <% if params.key?(:type) && params[:type] != :text %>
    <% if params[:type] == :boolean %>
    <% # If it is a boolean, just render the boolean field and continue the loop. %>
    <%= render 'shared/boolean_search_form_field', f: f, name: key, label: params.fetch(:label, key.to_s.humanize) %>
    <% next %>
    <% # TODO: This is now broken. See carousel items index. %>
    <% elsif params[:type] == :select %>
    <% params[:include_blank] = true %>
    <%= f.select key, params[:choices], params %>
    <% next %>
    <% end %>
    <% else %>
    <% # If there is no key, text is implied. %>
    <% if params.key?(:slug) %>
    <% params.merge!({ required: false }) %>
    <% end %>
    <% end %>

    <% params = params.except!([:type, :slug]) %>

    <%= f.input key, params %>

    <% end %>
  </div>
  <div class="card-footer">
    <%= f.submit :Search, class: 'btn btn-primary' %>
    <% end %>
  </div>
</div>